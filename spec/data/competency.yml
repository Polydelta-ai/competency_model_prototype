data_mixins:
    competency:
        class: CompetencyMixin
        fields:
            competency:
                type: "@django.ForeignKey"
                relation: competency
                options:
                    "null": true
                    on_delete: "@django.PROTECT"
                    editable: false

    competency_relation:
        class: CompetencyRelationMixin
        fields:
            competencies:
                type: "@django.ManyToManyField"
                relation: competency

data_base:
    competency:
        class: CompetencyBase
        base: resource
        mixins: [competency]
        id_fields: [competency_id, name]
        meta:
            unique_together: [competency, name]
            scope: competency

data:
    competency:
        class: Competency
        base: environment
        mixins: [competency_correlation_relation]
        id_fields: [definition]
        roles:
            edit: [doi-admin]
            view: [public]
        fields:
            definition:
                type: "@django.TextField"
                options:
                    "null": true
        meta:
            unique_together: []

command_mixins:
    competency:
        class: CompetencyMixin
        meta:
            competency:
                data: competency
                priority: 3

command_base:
    competency:
        class: CompetencyBase
        mixins: [competency, competency_correlation]
        server_enabled: true
        groups_allowed: [doi-admin]

command:
    competency:
        resource: competency
        base_name: competency
        base: competency
        priority: 90
